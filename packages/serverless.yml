service: serverless-practice

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  environment:
    DYNAMODB_TABLE: serverless-practice
    S3_BUCKET_NAME: serverless-practice-data
    SERVICE_NAME: practice
    JWT_ACCESS_SECRET: test123456789
    JWT_REFRESH_SECRET: 123456789test
    SLACK_BOT_OAUTH_KEY: ${env:SLACK_BOT_OAUTH_KEY}
    SLACK_USER_KEY: ${env:SLACK_USER_KEY}
    SLACK_CHANNEL_KEY: ${env:SLACK_CHANNEL_KEY}
  deploymentBucket:
    name: serverless-practice-service-bucket

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:ap-northeast-2:*:table/serverless-practice

        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: arn:aws:s3:::serverless-practice/*

        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: arn:aws:s3:::serverless-practice

        - Effect: Allow
          Action:
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:CreateLogGroup
            - logs:CreateLogStream  # 이 권한을 추가
          Resource: arn:aws:logs:ap-northeast-2:825765395574:log-group:/aws/lambda/my-api-gateway-logs:*



functions:
  ### 게시판 ###
  - ${file(./crud/functions.yml):functions}
  ### 슬랙 ###
  - ${file(./slack/functions.yml):functions}
  ### 로그인 ###
  - ${file(./login/functions.yml):functions}

plugins:
  - serverless-offline

build:
  esbuild:
    bundle: true
    minify: false
    sourcemap:
      type: linked
    external:
      - '@aws-sdk/*'
